{"ast":null,"code":"var _jsxFileName = \"/Users/connermatson/Projects/rona/components/Stats.js\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport useStats from \"../lib/useStats\";\n\nconst Stats = ({\n  url\n}) => {\n  const {\n    stats,\n    loading,\n    error\n  } = useStats(url);\n  console.log(stats, loading, error);\n  if (loading) return __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, \"Loading....\");\n  if (error) return __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, \"Error...\");\n  const mortalityRate = (100 / stats.confirmed.value * stats.deaths.value).toFixed(2);\n  return __jsx(\"div\", {\n    style: {\n      padding: \"4vw\",\n      height: \"90vh\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, __jsx(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, \"Confirmed: \", __jsx(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, stats.confirmed.value)), __jsx(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, \"Recovered: \", __jsx(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, stats.recovered.value)), __jsx(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, \"Deaths: \", __jsx(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, stats.deaths.value)), __jsx(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, \"Mortality Rate: \", __jsx(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, mortalityRate, \"%\")));\n};\n\nexport default Stats;","map":{"version":3,"sources":["/Users/connermatson/Projects/rona/components/Stats.js"],"names":["React","useStats","Stats","url","stats","loading","error","console","log","mortalityRate","confirmed","value","deaths","toFixed","padding","height","recovered"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,iBAArB;;AAEA,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAa;AACzB,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA,OAAT;AAAkBC,IAAAA;AAAlB,MAA4BL,QAAQ,CAACE,GAAD,CAA1C;AACAI,EAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAZ,EAAmBC,OAAnB,EAA4BC,KAA5B;AAEA,MAAID,OAAJ,EAAa,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAP;AACb,MAAIC,KAAJ,EAAW,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAP;AAEX,QAAMG,aAAa,GAAG,CACnB,MAAML,KAAK,CAACM,SAAN,CAAgBC,KAAvB,GACAP,KAAK,CAACQ,MAAN,CAAaD,KAFO,EAGpBE,OAHoB,CAGZ,CAHY,CAAtB;AAKA,SACE;AACE,IAAA,KAAK,EAAE;AACLC,MAAAA,OAAO,EAAE,KADJ;AAELC,MAAAA,MAAM,EAAE;AAFH,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOX,KAAK,CAACM,SAAN,CAAgBC,KAAvB,CADb,CANF,EAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOP,KAAK,CAACY,SAAN,CAAgBL,KAAvB,CADb,CAVF,EAcE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOP,KAAK,CAACQ,MAAN,CAAaD,KAApB,CADV,CAdF,EAkBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBACkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOF,aAAP,MADlB,CAlBF,CADF;AAwBD,CApCD;;AAsCA,eAAeP,KAAf","sourcesContent":["import React from \"react\";\nimport useStats from \"../lib/useStats\";\n\nconst Stats = ({ url }) => {\n  const { stats, loading, error } = useStats(url);\n  console.log(stats, loading, error);\n\n  if (loading) return <p>Loading....</p>;\n  if (error) return <p>Error...</p>;\n\n  const mortalityRate = (\n    (100 / stats.confirmed.value) *\n    stats.deaths.value\n  ).toFixed(2);\n\n  return (\n    <div\n      style={{\n        padding: \"4vw\",\n        height: \"90vh\",\n      }}\n    >\n      <h4>\n        Confirmed: <span>{stats.confirmed.value}</span>\n      </h4>\n\n      <h4>\n        Recovered: <span>{stats.recovered.value}</span>\n      </h4>\n\n      <h4>\n        Deaths: <span>{stats.deaths.value}</span>\n      </h4>\n\n      <h4>\n        Mortality Rate: <span>{mortalityRate}%</span>\n      </h4>\n    </div>\n  );\n};\n\nexport default Stats;\n"]},"metadata":{},"sourceType":"module"}