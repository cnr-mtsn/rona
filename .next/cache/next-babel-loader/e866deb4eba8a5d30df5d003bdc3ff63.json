{"ast":null,"code":"import _readOnlyError from \"@babel/runtime/helpers/esm/readOnlyError\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/connermatson/Projects/rona/components/StateStats.js\";\nvar __jsx = React.createElement;\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n  border: none;\\n  background: transparent;\\n  margin: 30px 0 30px 0;\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState } from \"react\";\nimport useStats from \"../lib/useStats\";\nimport styled from \"styled-components\";\nvar StatGrid = styled.div(_templateObject());\nvar StatBlock = styled.div(_templateObject2());\nvar ButtonStyle = styled.button(_templateObject3());\n\nvar StateStats = function StateStats(_ref) {\n  var url = _ref.url;\n\n  var _useStats = useStats(url),\n      stats = _useStats.stats,\n      loading = _useStats.loading,\n      error = _useStats.error;\n\n  var mortalityRate = 0;\n\n  if (stats[num].confirmed === undefined || stats[num].deaths === undefined) {\n    mortalityRate = (_readOnlyError(\"mortalityRate\"), 0);\n  } else {\n    mortalityRate = (_readOnlyError(\"mortalityRate\"), (100 / stats[num].confirmed * stats[num].deaths).toFixed(2));\n  }\n\n  console.log(stats, loading, error);\n  if (loading) return __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, \"Loading....\");\n  if (error) return __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, \"Error...\");\n  return __jsx(React.Fragment, null, __jsx(StatGrid, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, __jsx(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, \"State: \", __jsx(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, stats[num].provinceState)), __jsx(StatBlock, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, __jsx(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \"Confirmed: \", __jsx(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, stats[num].confirmed))), __jsx(StatBlock, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, __jsx(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, \"Recovered: \", __jsx(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, stats[num].recovered))), __jsx(StatBlock, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, __jsx(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, \"Deaths: \", __jsx(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, stats[num].deaths))), __jsx(StatBlock, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, __jsx(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, \"Active: \", __jsx(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, stats[num].active))), __jsx(StatBlock, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, __jsx(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, \"Mortality Rate: \", __jsx(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, mortalityRate, \"%\"))), __jsx(ButtonStyle, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, __jsx(\"button\", {\n    onClick: function onClick() {\n      num -= 1;\n      setNum(num);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, \"Last State\"), __jsx(\"button\", {\n    onClick: function onClick() {\n      num += 1;\n      setNum(num);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, \"Next State\"))));\n};\n\nexport default StateStats;","map":{"version":3,"sources":["/Users/connermatson/Projects/rona/components/StateStats.js"],"names":["React","useState","useStats","styled","StatGrid","div","StatBlock","ButtonStyle","button","StateStats","url","stats","loading","error","mortalityRate","num","confirmed","undefined","deaths","toFixed","console","log","provinceState","recovered","active","setNum"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport useStats from \"../lib/useStats\";\nimport styled from \"styled-components\";\n\nconst StatGrid = styled.div``;\nconst StatBlock = styled.div``;\n\nconst ButtonStyle = styled.button`\n  border: none;\n  background: transparent;\n  margin: 30px 0 30px 0;\n`;\n\nconst StateStats = ({ url }) => {\n  const { stats, loading, error } = useStats(url);\n  const mortalityRate = 0;\n  if (stats[num].confirmed === undefined || stats[num].deaths === undefined) {\n    mortalityRate = 0;\n  } else {\n    mortalityRate = ((100 / stats[num].confirmed) * stats[num].deaths).toFixed(\n      2,\n    );\n  }\n  console.log(stats, loading, error);\n\n  if (loading) return <p>Loading....</p>;\n  if (error) return <p>Error...</p>;\n\n  return (\n    <>\n      <StatGrid>\n        <h3>\n          State: <span>{stats[num].provinceState}</span>\n        </h3>\n        <StatBlock>\n          <h3>\n            Confirmed: <span>{stats[num].confirmed}</span>\n          </h3>\n        </StatBlock>\n        <StatBlock>\n          <h3>\n            Recovered: <span>{stats[num].recovered}</span>\n          </h3>\n        </StatBlock>\n        <StatBlock>\n          <h3>\n            Deaths: <span>{stats[num].deaths}</span>\n          </h3>\n        </StatBlock>\n        <StatBlock>\n          <h3>\n            Active: <span>{stats[num].active}</span>\n          </h3>\n        </StatBlock>\n        <StatBlock>\n          <h3>\n            Mortality Rate: <span>{mortalityRate}%</span>\n          </h3>\n        </StatBlock>\n        <ButtonStyle>\n          <button\n            onClick={() => {\n              num -= 1;\n              setNum(num);\n            }}\n          >\n            Last State\n          </button>\n\n          <button\n            onClick={() => {\n              num += 1;\n              setNum(num);\n            }}\n          >\n            Next State\n          </button>\n        </ButtonStyle>\n      </StatGrid>\n    </>\n  );\n};\n\nexport default StateStats;\n"]},"metadata":{},"sourceType":"module"}