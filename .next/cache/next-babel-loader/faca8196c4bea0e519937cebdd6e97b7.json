{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/connermatson/Projects/rona/components/StateStats.js\";\nvar __jsx = React.createElement;\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  background: #f2f2f2;\\n  font-size: 2rem;\\n  padding: 2rem;\\n  border-radius: 2rem;\\n  display: grid;\\n  align-items: center;\\n  justify-items: center;\\n  text-align: center;\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  display: grid;\\n  grid-template-columns: repeat(3, 1fr);\\n  grid-gap: 1rem;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState } from \"react\";\nimport useStats from \"../lib/useStats\";\nimport styled from \"styled-components\";\nvar StatGrid = styled.div(_templateObject());\nvar StatBlock = styled.div(_templateObject2());\n\nvar StateStats = function StateStats(_ref) {\n  var url = _ref.url;\n\n  var _useStats = useStats(url),\n      stats = _useStats.stats,\n      loading = _useStats.loading,\n      error = _useStats.error;\n\n  var _useState = useState(0),\n      num = _useState[0],\n      setNum = _useState[1];\n\n  console.log(stats, loading, error);\n  if (loading) return __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, \"Loading....\");\n  if (error) return __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, \"Error...\");\n  return __jsx(React.Fragment, null, __jsx(StatGrid, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, __jsx(StatBlock, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, __jsx(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, \"State: \"), __jsx(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, stats[num].provinceState)), __jsx(StatBlock, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, __jsx(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \"Confirmed: \"), __jsx(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, stats[num].confirmed)), __jsx(StatBlock, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, __jsx(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, \"Recovered: \"), __jsx(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, stats[num].recovered)), __jsx(StatBlock, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, __jsx(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, \"Deaths: \"), __jsx(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, stats[num].deaths))));\n};\n\nexport default StateStats;","map":{"version":3,"sources":["/Users/connermatson/Projects/rona/components/StateStats.js"],"names":["React","useState","useStats","styled","StatGrid","div","StatBlock","StateStats","url","stats","loading","error","num","setNum","console","log","provinceState","confirmed","recovered","deaths"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,QAAP,MAAqB,iBAArB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,IAAMC,QAAQ,GAAGD,MAAM,CAACE,GAAV,mBAAd;AAKA,IAAMC,SAAS,GAAGH,MAAM,CAACE,GAAV,oBAAf;;AAWA,IAAME,UAAU,GAAG,SAAbA,UAAa,OAAa;AAAA,MAAVC,GAAU,QAAVA,GAAU;;AAAA,kBACIN,QAAQ,CAACM,GAAD,CADZ;AAAA,MACtBC,KADsB,aACtBA,KADsB;AAAA,MACfC,OADe,aACfA,OADe;AAAA,MACNC,KADM,aACNA,KADM;;AAAA,kBAERV,QAAQ,CAAC,CAAD,CAFA;AAAA,MAEvBW,GAFuB;AAAA,MAElBC,MAFkB;;AAG9BC,EAAAA,OAAO,CAACC,GAAR,CAAYN,KAAZ,EAAmBC,OAAnB,EAA4BC,KAA5B;AAEA,MAAID,OAAJ,EAAa,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAP;AACb,MAAIC,KAAJ,EAAW,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAP;AAEX,SACE,4BACE,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOF,KAAK,CAACG,GAAD,CAAL,CAAWI,aAAlB,CAFF,CADF,EAKE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOP,KAAK,CAACG,GAAD,CAAL,CAAWK,SAAlB,CAFF,CALF,EASE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOR,KAAK,CAACG,GAAD,CAAL,CAAWM,SAAlB,CAFF,CATF,EAaE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOT,KAAK,CAACG,GAAD,CAAL,CAAWO,MAAlB,CAFF,CAbF,CADF,CADF;AAsBD,CA9BD;;AAgCA,eAAeZ,UAAf","sourcesContent":["import React, { useState } from \"react\";\nimport useStats from \"../lib/useStats\";\nimport styled from \"styled-components\";\n\nconst StatGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  grid-gap: 1rem;\n`;\nconst StatBlock = styled.div`\n  background: #f2f2f2;\n  font-size: 2rem;\n  padding: 2rem;\n  border-radius: 2rem;\n  display: grid;\n  align-items: center;\n  justify-items: center;\n  text-align: center;\n`;\n\nconst StateStats = ({ url }) => {\n  const { stats, loading, error } = useStats(url);\n  const [num, setNum] = useState(0);\n  console.log(stats, loading, error);\n\n  if (loading) return <p>Loading....</p>;\n  if (error) return <p>Error...</p>;\n\n  return (\n    <>\n      <StatGrid>\n        <StatBlock>\n          <h3>State: </h3>\n          <span>{stats[num].provinceState}</span>\n        </StatBlock>\n        <StatBlock>\n          <h3>Confirmed: </h3>\n          <span>{stats[num].confirmed}</span>\n        </StatBlock>\n        <StatBlock>\n          <h3>Recovered: </h3>\n          <span>{stats[num].recovered}</span>\n        </StatBlock>\n        <StatBlock>\n          <h3>Deaths: </h3>\n          <span>{stats[num].deaths}</span>\n        </StatBlock>\n      </StatGrid>\n    </>\n  );\n};\n\nexport default StateStats;\n"]},"metadata":{},"sourceType":"module"}