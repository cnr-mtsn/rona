{"ast":null,"code":"// import React, { useState } from \"react\";\n// import useStats from \"../lib/useStats\";\n// import StateBlock from \"./StateBlock\";\n// const StateStats = ({ url }) => {\n//   const { stats, loading, error } = useStats(url);\n//   const [selectedState, setSelectedState] = useState(\"Missouri\");\n//   if (loading) return <p>Loading....</p>;\n//   if (error) return <p>Error...</p>;\n//   let states = [];\n//   for (let i = 0; i < stats.length; i++) {\n//     if (states.indexOf(stats[i].provinceState) === -1) {\n//       states.push(stats[i].provinceState);\n//     }\n//     states.sort();\n//   }\n//   console.log(states.length);\n//   return (\n//     <>\n//       <div\n//         style={{\n//           display: \"flex\",\n//           justifyContent: \"center\",\n//           alignItems: \"center\",\n//           marginTop: \"5vh\",\n//         }}\n//       >\n//         <select\n//           style={{\n//             width: \"60vw\",\n//             border: \"1px solid black\",\n//             background: \"transparent\",\n//             boxShadow: \"2px 2px grey\",\n//             fontSize: \"20px\",\n//           }}\n//           onChange={e => {\n//             setSelectedState(e.target.value);\n//           }}\n//         >\n//           {states.map(state => (\n//             <option value={state} selected={selectedState} key={state}>\n//               {state}\n//             </option>\n//           ))}\n//         </select>\n//       </div>\n//       <div\n//         style={{\n//           display: \"grid\",\n//           gridTemplateColumns: \"repeat(2, 1fr)\",\n//           gridGap: \"2rem\",\n//           margin: \"5vh 0 5vh 0\",\n//           padding: \"1rem\",\n//           justifyItems: \"center\",\n//           overflowY: \"scroll\",\n//         }}\n//       >\n//         {stats.map(state =>\n//           state.provinceState === selectedState ? (\n//             <StateBlock state={state} />\n//           ) : null,\n//         )}\n//       </div>\n//     </>\n//   );\n// };\n// export default StateStats;","map":{"version":3,"sources":["/Users/connermatson/Projects/rona/components/StateStats.js"],"names":[],"mappings":"AAAA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["// import React, { useState } from \"react\";\n// import useStats from \"../lib/useStats\";\n// import StateBlock from \"./StateBlock\";\n\n// const StateStats = ({ url }) => {\n//   const { stats, loading, error } = useStats(url);\n\n//   const [selectedState, setSelectedState] = useState(\"Missouri\");\n\n//   if (loading) return <p>Loading....</p>;\n//   if (error) return <p>Error...</p>;\n\n//   let states = [];\n//   for (let i = 0; i < stats.length; i++) {\n//     if (states.indexOf(stats[i].provinceState) === -1) {\n//       states.push(stats[i].provinceState);\n//     }\n//     states.sort();\n//   }\n\n//   console.log(states.length);\n\n//   return (\n//     <>\n//       <div\n//         style={{\n//           display: \"flex\",\n//           justifyContent: \"center\",\n//           alignItems: \"center\",\n//           marginTop: \"5vh\",\n//         }}\n//       >\n//         <select\n//           style={{\n//             width: \"60vw\",\n//             border: \"1px solid black\",\n//             background: \"transparent\",\n//             boxShadow: \"2px 2px grey\",\n//             fontSize: \"20px\",\n//           }}\n//           onChange={e => {\n//             setSelectedState(e.target.value);\n//           }}\n//         >\n//           {states.map(state => (\n//             <option value={state} selected={selectedState} key={state}>\n//               {state}\n//             </option>\n//           ))}\n//         </select>\n//       </div>\n//       <div\n//         style={{\n//           display: \"grid\",\n//           gridTemplateColumns: \"repeat(2, 1fr)\",\n//           gridGap: \"2rem\",\n//           margin: \"5vh 0 5vh 0\",\n//           padding: \"1rem\",\n//           justifyItems: \"center\",\n//           overflowY: \"scroll\",\n//         }}\n//       >\n//         {stats.map(state =>\n//           state.provinceState === selectedState ? (\n//             <StateBlock state={state} />\n//           ) : null,\n//         )}\n//       </div>\n//     </>\n//   );\n// };\n\n// export default StateStats;\n"]},"metadata":{},"sourceType":"script"}