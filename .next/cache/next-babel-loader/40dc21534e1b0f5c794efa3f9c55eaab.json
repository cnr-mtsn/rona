{"ast":null,"code":"var _jsxFileName = \"/Users/connermatson/Projects/rona/components/StateStats.js\";\nvar __jsx = React.createElement;\nimport React, { useState } from \"react\";\nimport useStats from \"../lib/useStats\";\nimport StateBlock from \"./StateBlock\";\n\nvar StateStats = function StateStats(_ref) {\n  var url = _ref.url;\n\n  var _useStats = useStats(url),\n      stats = _useStats.stats,\n      loading = _useStats.loading,\n      error = _useStats.error;\n\n  var _useState = useState(\"Missouri\"),\n      state = _useState[0],\n      setState = _useState[1];\n\n  if (loading) return __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, \"Loading....\");\n  if (error) return __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, \"Error...\");\n  var states = [];\n  stats.map(function (stat) {\n    if (states.indexOf(stat.provinceState) === -1) {\n      states = states.concat(stat.provinceState);\n    }\n  });\n  console.log(states.toString());\n  return __jsx(\"div\", {\n    style: {\n      display: \"grid\",\n      gridTemplateColumns: \"repeat(2, 1fr)\",\n      gridGap: \"2rem\",\n      margin: \"5vh 0 5vh 0\",\n      padding: \"1rem\",\n      justifyItems: \"center\",\n      overflowY: \"scroll\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, stats.map(function (state) {\n    return __jsx(StateBlock, {\n      state: state,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    });\n  }));\n};\n\nexport default StateStats;","map":{"version":3,"sources":["/Users/connermatson/Projects/rona/components/StateStats.js"],"names":["React","useState","useStats","StateBlock","StateStats","url","stats","loading","error","state","setState","states","map","stat","indexOf","provinceState","concat","console","log","toString","display","gridTemplateColumns","gridGap","margin","padding","justifyItems","overflowY"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,QAAP,MAAqB,iBAArB;AACA,OAAOC,UAAP,MAAuB,cAAvB;;AAEA,IAAMC,UAAU,GAAG,SAAbA,UAAa,OAAa;AAAA,MAAVC,GAAU,QAAVA,GAAU;;AAAA,kBACIH,QAAQ,CAACG,GAAD,CADZ;AAAA,MACtBC,KADsB,aACtBA,KADsB;AAAA,MACfC,OADe,aACfA,OADe;AAAA,MACNC,KADM,aACNA,KADM;;AAAA,kBAGJP,QAAQ,CAAC,UAAD,CAHJ;AAAA,MAGvBQ,KAHuB;AAAA,MAGhBC,QAHgB;;AAK9B,MAAIH,OAAJ,EAAa,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAP;AACb,MAAIC,KAAJ,EAAW,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAP;AAEX,MAAIG,MAAM,GAAG,EAAb;AACAL,EAAAA,KAAK,CAACM,GAAN,CAAU,UAAAC,IAAI,EAAI;AAChB,QAAIF,MAAM,CAACG,OAAP,CAAeD,IAAI,CAACE,aAApB,MAAuC,CAAC,CAA5C,EAA+C;AAC7CJ,MAAAA,MAAM,GAAGA,MAAM,CAACK,MAAP,CAAcH,IAAI,CAACE,aAAnB,CAAT;AACD;AACF,GAJD;AAMAE,EAAAA,OAAO,CAACC,GAAR,CAAYP,MAAM,CAACQ,QAAP,EAAZ;AAEA,SACE;AACE,IAAA,KAAK,EAAE;AACLC,MAAAA,OAAO,EAAE,MADJ;AAELC,MAAAA,mBAAmB,EAAE,gBAFhB;AAGLC,MAAAA,OAAO,EAAE,MAHJ;AAILC,MAAAA,MAAM,EAAE,aAJH;AAKLC,MAAAA,OAAO,EAAE,MALJ;AAMLC,MAAAA,YAAY,EAAE,QANT;AAOLC,MAAAA,SAAS,EAAE;AAPN,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAWGpB,KAAK,CAACM,GAAN,CAAU,UAAAH,KAAK;AAAA,WACd,MAAC,UAAD;AAAY,MAAA,KAAK,EAAEA,KAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADc;AAAA,GAAf,CAXH,CADF;AAiBD,CAlCD;;AAoCA,eAAeL,UAAf","sourcesContent":["import React, { useState } from \"react\";\nimport useStats from \"../lib/useStats\";\nimport StateBlock from \"./StateBlock\";\n\nconst StateStats = ({ url }) => {\n  const { stats, loading, error } = useStats(url);\n\n  const [state, setState] = useState(\"Missouri\");\n\n  if (loading) return <p>Loading....</p>;\n  if (error) return <p>Error...</p>;\n\n  let states = [];\n  stats.map(stat => {\n    if (states.indexOf(stat.provinceState) === -1) {\n      states = states.concat(stat.provinceState);\n    }\n  });\n\n  console.log(states.toString());\n\n  return (\n    <div\n      style={{\n        display: \"grid\",\n        gridTemplateColumns: \"repeat(2, 1fr)\",\n        gridGap: \"2rem\",\n        margin: \"5vh 0 5vh 0\",\n        padding: \"1rem\",\n        justifyItems: \"center\",\n        overflowY: \"scroll\",\n      }}\n    >\n      {stats.map(state => (\n        <StateBlock state={state} />\n      ))}\n    </div>\n  );\n};\n\nexport default StateStats;\n"]},"metadata":{},"sourceType":"module"}