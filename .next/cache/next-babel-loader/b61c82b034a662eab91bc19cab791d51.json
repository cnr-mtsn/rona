{"ast":null,"code":"var _jsxFileName = \"/Users/connermatson/Projects/rona/components/StateStats.js\";\nvar __jsx = React.createElement;\nimport React, { useState } from \"react\";\nimport useStats from \"../lib/useStats\";\nimport styled from \"styled-components\";\nconst StatGrid = styled.div`\n  /* display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  grid-gap: 1rem; */\n  width: 800px;\n  text-align: center;\n`;\nconst StatBlock = styled.div`\n  /* background: #f2f2f2;\n  font-size: 2rem;\n  padding: 2rem;\n  border-radius: 2rem;\n  display: grid;\n  align-items: center;\n  justify-items: center;\n  text-align: center; */\n`;\nconst ButtonStyle = styled.button`\n  display: flex;\n  flex-direction: row;\n  /* justify-content: center;\n  background: transparent;\n  border: none; */\n\n  button {\n    /* height: 40px;\n    width: 120px;\n    border-radius: 0.5rem;\n    margin: 0;\n    padding: 0; */\n  }\n`;\n\nconst StateStats = ({\n  url\n}) => {\n  const {\n    stats,\n    loading,\n    error\n  } = useStats(url);\n  let {\n    0: num,\n    1: setNum\n  } = useState(0);\n  console.log(stats, loading, error);\n  if (loading) return __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \"Loading....\");\n  if (error) return __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, \"Error...\");\n  return __jsx(React.Fragment, null, __jsx(StatGrid, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, __jsx(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, \"State: \", __jsx(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, stats[num].provinceState)), __jsx(StatBlock, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, __jsx(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, \"Confirmed: \"), __jsx(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, stats[num].confirmed)), __jsx(StatBlock, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, __jsx(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, \"Recovered: \"), __jsx(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, stats[num].recovered)), __jsx(StatBlock, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, __jsx(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, \"Deaths: \"), __jsx(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, stats[num].deaths)), __jsx(StatBlock, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, __jsx(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, \"Active: \"), __jsx(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, stats[num].active)), __jsx(ButtonStyle, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, __jsx(\"button\", {\n    onClick: () => {\n      num -= 1;\n      setNum(num);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, \"Last State\"), __jsx(\"button\", {\n    onClick: () => {\n      num += 1;\n      setNum(num);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, \"Next State\"))));\n};\n\nexport default StateStats;","map":{"version":3,"sources":["/Users/connermatson/Projects/rona/components/StateStats.js"],"names":["React","useState","useStats","styled","StatGrid","div","StatBlock","ButtonStyle","button","StateStats","url","stats","loading","error","num","setNum","console","log","provinceState","confirmed","recovered","deaths","active"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,QAAP,MAAqB,iBAArB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,MAAMC,QAAQ,GAAGD,MAAM,CAACE,GAAI;;;;;;CAA5B;AAOA,MAAMC,SAAS,GAAGH,MAAM,CAACE,GAAI;;;;;;;;;CAA7B;AAWA,MAAME,WAAW,GAAGJ,MAAM,CAACK,MAAO;;;;;;;;;;;;;;CAAlC;;AAgBA,MAAMC,UAAU,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAa;AAC9B,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA,OAAT;AAAkBC,IAAAA;AAAlB,MAA4BX,QAAQ,CAACQ,GAAD,CAA1C;AACA,MAAI;AAAA,OAACI,GAAD;AAAA,OAAMC;AAAN,MAAgBd,QAAQ,CAAC,CAAD,CAA5B;AACAe,EAAAA,OAAO,CAACC,GAAR,CAAYN,KAAZ,EAAmBC,OAAnB,EAA4BC,KAA5B;AAEA,MAAID,OAAJ,EAAa,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAP;AACb,MAAIC,KAAJ,EAAW,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAP;AAEX,SACE,4BACE,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOF,KAAK,CAACG,GAAD,CAAL,CAAWI,aAAlB,CADT,CADF,EAIE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOP,KAAK,CAACG,GAAD,CAAL,CAAWK,SAAlB,CAFF,CAJF,EAQE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOR,KAAK,CAACG,GAAD,CAAL,CAAWM,SAAlB,CAFF,CARF,EAYE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOT,KAAK,CAACG,GAAD,CAAL,CAAWO,MAAlB,CAFF,CAZF,EAgBE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOV,KAAK,CAACG,GAAD,CAAL,CAAWQ,MAAlB,CAFF,CAhBF,EAoBE,MAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,OAAO,EAAE,MAAM;AACbR,MAAAA,GAAG,IAAI,CAAP;AACAC,MAAAA,MAAM,CAACD,GAAD,CAAN;AACD,KAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAUE;AACE,IAAA,OAAO,EAAE,MAAM;AACbA,MAAAA,GAAG,IAAI,CAAP;AACAC,MAAAA,MAAM,CAACD,GAAD,CAAN;AACD,KAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAVF,CApBF,CADF,CADF;AA4CD,CApDD;;AAsDA,eAAeL,UAAf","sourcesContent":["import React, { useState } from \"react\";\nimport useStats from \"../lib/useStats\";\nimport styled from \"styled-components\";\n\nconst StatGrid = styled.div`\n  /* display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  grid-gap: 1rem; */\n  width: 800px;\n  text-align: center;\n`;\nconst StatBlock = styled.div`\n  /* background: #f2f2f2;\n  font-size: 2rem;\n  padding: 2rem;\n  border-radius: 2rem;\n  display: grid;\n  align-items: center;\n  justify-items: center;\n  text-align: center; */\n`;\n\nconst ButtonStyle = styled.button`\n  display: flex;\n  flex-direction: row;\n  /* justify-content: center;\n  background: transparent;\n  border: none; */\n\n  button {\n    /* height: 40px;\n    width: 120px;\n    border-radius: 0.5rem;\n    margin: 0;\n    padding: 0; */\n  }\n`;\n\nconst StateStats = ({ url }) => {\n  const { stats, loading, error } = useStats(url);\n  let [num, setNum] = useState(0);\n  console.log(stats, loading, error);\n\n  if (loading) return <p>Loading....</p>;\n  if (error) return <p>Error...</p>;\n\n  return (\n    <>\n      <StatGrid>\n        <h3>\n          State: <span>{stats[num].provinceState}</span>\n        </h3>\n        <StatBlock>\n          <h3>Confirmed: </h3>\n          <span>{stats[num].confirmed}</span>\n        </StatBlock>\n        <StatBlock>\n          <h3>Recovered: </h3>\n          <span>{stats[num].recovered}</span>\n        </StatBlock>\n        <StatBlock>\n          <h3>Deaths: </h3>\n          <span>{stats[num].deaths}</span>\n        </StatBlock>\n        <StatBlock>\n          <h3>Active: </h3>\n          <span>{stats[num].active}</span>\n        </StatBlock>\n        <ButtonStyle>\n          <button\n            onClick={() => {\n              num -= 1;\n              setNum(num);\n            }}\n          >\n            Last State\n          </button>\n\n          <button\n            onClick={() => {\n              num += 1;\n              setNum(num);\n            }}\n          >\n            Next State\n          </button>\n        </ButtonStyle>\n      </StatGrid>\n    </>\n  );\n};\n\nexport default StateStats;\n"]},"metadata":{},"sourceType":"module"}