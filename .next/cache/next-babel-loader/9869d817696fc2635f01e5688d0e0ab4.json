{"ast":null,"code":"var _jsxFileName = \"/Users/connermatson/Projects/rona/components/Stats.js\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport useStats from \"../lib/useStats\";\nimport { FaDirections } from \"react-icons/fa\";\n\nvar Stats = function Stats(_ref) {\n  var url = _ref.url;\n\n  var _useStats = useStats(url),\n      stats = _useStats.stats,\n      loading = _useStats.loading,\n      error = _useStats.error;\n\n  console.log(stats, loading, error);\n  if (loading) return __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, \"Loading....\");\n  if (error) return __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, \"Error...\");\n  var mortalityRate = (100 / stats.confirmed.value * stats.deaths.value).toFixed(2);\n  return __jsx(\"div\", {\n    style: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      outline: \"\".concat(props.topMargin)\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    style: {\n      textAlign: \"center\",\n      height: \"\".concat(props.divHeight),\n      width: \"100vw\",\n      display: \"flex\",\n      justifyContent: \"center\",\n      flexDirection: \"column\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, \"Confirmed\"), __jsx(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, stats.confirmed.value)), __jsx(\"div\", {\n    style: {\n      textAlign: \"center\",\n      height: \"\".concat(props.divHeight),\n      width: \"100vw\",\n      display: \"flex\",\n      justifyContent: \"center\",\n      flexDirection: \"column\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, \"Recovered\"), __jsx(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, stats.recovered.value)), __jsx(\"div\", {\n    style: {\n      textAlign: \"center\",\n      height: \"\".concat(props.divHeight),\n      width: \"100vw\",\n      display: \"flex\",\n      justifyContent: \"center\",\n      flexDirection: \"column\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, \"Deaths\"), __jsx(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, stats.deaths.value)), __jsx(\"div\", {\n    style: {\n      textAlign: \"center\",\n      height: \"\".concat(props.divHeight),\n      width: \"100vw\",\n      display: \"flex\",\n      justifyContent: \"center\",\n      flexDirection: \"column\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, \"Mortality\"), __jsx(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, mortalityRate, \"%\")));\n};\n\nexport default Stats;","map":{"version":3,"sources":["/Users/connermatson/Projects/rona/components/Stats.js"],"names":["React","useStats","FaDirections","Stats","url","stats","loading","error","console","log","mortalityRate","confirmed","value","deaths","toFixed","display","flexDirection","outline","props","topMargin","textAlign","height","divHeight","width","justifyContent","recovered"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport useStats from \"../lib/useStats\";\nimport { FaDirections } from \"react-icons/fa\";\n\nconst Stats = ({ url }) => {\n  const { stats, loading, error } = useStats(url);\n  console.log(stats, loading, error);\n\n  if (loading) return <p>Loading....</p>;\n  if (error) return <p>Error...</p>;\n\n  const mortalityRate = (\n    (100 / stats.confirmed.value) *\n    stats.deaths.value\n  ).toFixed(2);\n\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        flexDirection: \"column\",\n        outline: `${props.topMargin}`,\n      }}\n    >\n      <div\n        style={{\n          textAlign: \"center\",\n          height: `${props.divHeight}`,\n          width: \"100vw\",\n          display: \"flex\",\n          justifyContent: \"center\",\n          flexDirection: \"column\",\n        }}\n      >\n        <h1>Confirmed</h1>\n        <h2>{stats.confirmed.value}</h2>\n      </div>\n\n      <div\n        style={{\n          textAlign: \"center\",\n          height: `${props.divHeight}`,\n\n          width: \"100vw\",\n          display: \"flex\",\n          justifyContent: \"center\",\n          flexDirection: \"column\",\n        }}\n      >\n        <h1>Recovered</h1>\n        <h2>{stats.recovered.value}</h2>\n      </div>\n\n      <div\n        style={{\n          textAlign: \"center\",\n          height: `${props.divHeight}`,\n\n          width: \"100vw\",\n          display: \"flex\",\n          justifyContent: \"center\",\n          flexDirection: \"column\",\n        }}\n      >\n        <h1>Deaths</h1>\n        <h2>{stats.deaths.value}</h2>\n      </div>\n\n      <div\n        style={{\n          textAlign: \"center\",\n          height: `${props.divHeight}`,\n\n          width: \"100vw\",\n          display: \"flex\",\n          justifyContent: \"center\",\n          flexDirection: \"column\",\n        }}\n      >\n        <h1>Mortality</h1>\n        <h2>{mortalityRate}%</h2>\n      </div>\n    </div>\n  );\n};\n\nexport default Stats;\n"]},"metadata":{},"sourceType":"module"}