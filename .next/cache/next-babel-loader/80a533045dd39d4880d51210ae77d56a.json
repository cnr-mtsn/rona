{"ast":null,"code":"var _jsxFileName = \"/Users/connermatson/Projects/rona/components/StateStats.js\";\nvar __jsx = React.createElement;\nimport React, { useState } from \"react\";\nimport useStats from \"../lib/useStats\";\nimport styled from \"styled-components\";\nconst StatGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  grid-gap: 1rem;\n`;\nconst StatBlock = styled.div`\n  background: #f2f2f2;\n  font-size: 2rem;\n  padding: 2rem;\n  border-radius: 2rem;\n  display: grid;\n  align-items: center;\n  justify-items: center;\n  text-align: center;\n`;\nconst ButtonStyle = styled.button`\n  width: 200px;\n  height: 50px;\n  font-size: 20px;\n  text-align: center;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-radius: 2rem;\n  padding: 2rem;\n  background: lightslategray;ButtonStyle\n`;\n\nconst StateStats = ({\n  url\n}) => {\n  const {\n    stats,\n    loading,\n    error\n  } = useStats(url);\n  let {\n    0: num,\n    1: setNum\n  } = useState(1);\n  let mortalityRate = 0;\n\n  if (stats[num].confirmed !== 0) {\n    if (stats[num].deaths !== 0) {\n      mortalityRate = (100 / stats[num].confirmed * stats[num].deaths).toFixed(2);\n    }\n  }\n\n  console.log(stats, loading, error);\n  if (loading) return __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"Loading....\");\n  if (error) return __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, \"Error...\");\n  return __jsx(React.Fragment, null, __jsx(ButtonStyle, {\n    onClick: () => {\n      num -= 1;\n      setNum(num);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, \"Last State\"), __jsx(ButtonStyle, {\n    onClick: () => {\n      num += 1;\n      setNum(num);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, \"Next State\"), __jsx(StatGrid, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, __jsx(StatBlock, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, __jsx(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, \"State: \"), __jsx(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, stats[num].provinceState)), __jsx(StatBlock, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, __jsx(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, \"Confirmed: \"), __jsx(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, stats[num].confirmed)), __jsx(StatBlock, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, __jsx(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, \"Recovered: \"), __jsx(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, stats[num].recovered)), __jsx(StatBlock, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, __jsx(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, \"Deaths: \"), __jsx(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, stats[num].deaths)), __jsx(StatBlock, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, __jsx(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, \"Active: \"), __jsx(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, stats[num].active)), __jsx(StatBlock, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, __jsx(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, \"Mortality Rate: \"), __jsx(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, mortalityRate))));\n};\n\nexport default StateStats;","map":{"version":3,"sources":["/Users/connermatson/Projects/rona/components/StateStats.js"],"names":["React","useState","useStats","styled","StatGrid","div","StatBlock","ButtonStyle","button","StateStats","url","stats","loading","error","num","setNum","mortalityRate","confirmed","deaths","toFixed","console","log","provinceState","recovered","active"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport useStats from \"../lib/useStats\";\nimport styled from \"styled-components\";\n\nconst StatGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  grid-gap: 1rem;\n`;\nconst StatBlock = styled.div`\n  background: #f2f2f2;\n  font-size: 2rem;\n  padding: 2rem;\n  border-radius: 2rem;\n  display: grid;\n  align-items: center;\n  justify-items: center;\n  text-align: center;\n`;\n\nconst ButtonStyle = styled.button`\n  width: 200px;\n  height: 50px;\n  font-size: 20px;\n  text-align: center;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-radius: 2rem;\n  padding: 2rem;\n  background: lightslategray;ButtonStyle\n`;\n\nconst StateStats = ({ url }) => {\n  const { stats, loading, error } = useStats(url);\n  let [num, setNum] = useState(1);\n  let mortalityRate = 0;\n  if (stats[num].confirmed !== 0) {\n    if (stats[num].deaths !== 0) {\n      mortalityRate = (\n        (100 / stats[num].confirmed) *\n        stats[num].deaths\n      ).toFixed(2);\n    }\n  }\n  console.log(stats, loading, error);\n\n  if (loading) return <p>Loading....</p>;\n  if (error) return <p>Error...</p>;\n\n  return (\n    <>\n      <ButtonStyle\n        onClick={() => {\n          num -= 1;\n          setNum(num);\n        }}\n      >\n        Last State\n      </ButtonStyle>\n      <ButtonStyle\n        onClick={() => {\n          num += 1;\n          setNum(num);\n        }}\n      >\n        Next State\n      </ButtonStyle>\n      <StatGrid>\n        <StatBlock>\n          <h3>State: </h3>\n          <span>{stats[num].provinceState}</span>\n        </StatBlock>\n        <StatBlock>\n          <h3>Confirmed: </h3>\n          <span>{stats[num].confirmed}</span>\n        </StatBlock>\n        <StatBlock>\n          <h3>Recovered: </h3>\n          <span>{stats[num].recovered}</span>\n        </StatBlock>\n        <StatBlock>\n          <h3>Deaths: </h3>\n          <span>{stats[num].deaths}</span>\n        </StatBlock>\n        <StatBlock>\n          <h3>Active: </h3>\n          <span>{stats[num].active}</span>\n        </StatBlock>\n        <StatBlock>\n          <h3>Mortality Rate: </h3>\n          <span>{mortalityRate}</span>\n        </StatBlock>\n      </StatGrid>\n    </>\n  );\n};\n\nexport default StateStats;\n"]},"metadata":{},"sourceType":"module"}