{"version":3,"file":"static/webpack/static/development/pages/states.js.e3274f17ba38d639af88.hot-update.js","sources":["webpack:///./components/StateStats.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport useStats from \"../lib/useStats\";\nimport styled from \"styled-components\";\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n`;\nconst StatGrid = styled.div`\n  width: 800px;\n  border: 1px solid black;\n  text-align: center;\n`;\nconst StatBlock = styled.div`\n  /* background: #f2f2f2;\n  font-size: 2rem;\n  padding: 2rem;\n  border-radius: 2rem;\n  display: grid;\n  align-items: center;\n  justify-items: center;\n  text-align: center; */\n`;\n\nconst ButtonStyle = styled.button`\n  display: flex;\n  flex-direction: row;\n  width: 100%;\n  justify-content: center;\n  border: none;\n  background: transparent;\n  margin-top: 30px;\n  /* justify-content: center;\n  border: none; */\n\n  button {\n    /* height: 40px;\n    width: 120px;\n    border-radius: 0.5rem;\n    margin: 0;\n    padding: 0; */\n  }\n`;\n\nconst StateStats = ({ url }) => {\n  const { stats, loading, error } = useStats(url);\n  let [num, setNum] = useState(0);\n  console.log(stats, loading, error);\n\n  if (loading) return <p>Loading....</p>;\n  if (error) return <p>Error...</p>;\n\n  return (\n    <Wrapper>\n      <StatGrid>\n        <h3>\n          State: <span>{stats[num].provinceState}</span>\n        </h3>\n        <StatBlock>\n          <h3>Confirmed: </h3>\n          <span>{stats[num].confirmed}</span>\n        </StatBlock>\n        <StatBlock>\n          <h3>Recovered: </h3>\n          <span>{stats[num].recovered}</span>\n        </StatBlock>\n        <StatBlock>\n          <h3>Deaths: </h3>\n          <span>{stats[num].deaths}</span>\n        </StatBlock>\n        <StatBlock>\n          <h3>Active: </h3>\n          <span>{stats[num].active}</span>\n        </StatBlock>\n        <ButtonStyle>\n          <button\n            onClick={() => {\n              num -= 1;\n              setNum(num);\n            }}\n          >\n            Last State\n          </button>\n\n          <button\n            onClick={() => {\n              num += 1;\n              setNum(num);\n            }}\n          >\n            Next State\n          </button>\n        </ButtonStyle>\n      </StatGrid>\n    </Wrapper>\n  );\n};\n\nexport default StateStats;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAEA;AAKA;AAKA;AAWA;AACA;AAmsourceRoot":""}